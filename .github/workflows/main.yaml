name: Workflow

on:
  schedule:
    - cron: '30 23 * * 0'
    - cron: '30 23 * * 1'
    - cron: '30 23 * * 2'
    - cron: '30 23 * * 3'
    - cron: '30 23 * * 4'
    - cron: '30 23 * * 5'
  workflow_dispatch:
    inputs:
      playlist:
        description: 'Playlist name'
        required: false
        default: ''
      url:
        description: 'Url'
        required: false
        default: ''
      url_name:
        description: 'url name'
        required: false
        default: ''

jobs:
  my-job:
    name: My Job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Decrypt large secret
        run: ./decrypt_secret.sh
        env:
          GPG_SECRET_PASSPHRASE: ${{ secrets.GPG_SECRET_PASSPHRASE }}
      - name: Manual trigger for single url
        if: "${{ github.event.inputs.url != '' || github.event.inputs.url_name != '' || github.event.inputs.playlist != '' }}"
        run: make download 
        env:
          URL: ${{ github.event.inputs.url }}
          URL_NAME: ${{ github.event.inputs.url_name }}
          PLAYLIST: ${{ github.event.inputs.playlist }}
      - name: Monday
        if: github.event.schedule == '30 23 * * 0'
        run: make download 
        env:
          PLAYLIST: main
      - name: Tuesday
        if: github.event.schedule == '30 23 * * 1'
        run: make download 
        env:
          PLAYLIST: radio
      - name: Wednesday
        if: github.event.schedule == '30 23 * * 2'
        run: make download 
        env:
          PLAYLIST: this-is
      - name: Thursday
        if: github.event.schedule == '30 23 * * 3'
        run: make download 
        env:
          PLAYLIST: wakeup
      - name: Friday
        if: github.event.schedule == '30 23 * * 4'
        run: make download 
        env:
          PLAYLIST: ambiance
      - name: Saturday
        if: github.event.schedule == '30 23 * * 5'
        run: make download 
        env:
          PLAYLIST: saturday
      - name: push
        run: make rclone-install && rclone purge s3:bucket && rclone sync output/ s3:bucket/
        env:
          RCLONE_CONFIG_S3_ACCESS_KEY_ID: ${{ secrets.RCLONE_CONFIG_S3_ACCESS_KEY_ID }}
          RCLONE_CONFIG_S3_ACL: ${{ secrets.RCLONE_CONFIG_S3_ACL }}
          RCLONE_CONFIG_S3_ENDPOINT: ${{ secrets.RCLONE_CONFIG_S3_ENDPOINT }}
          RCLONE_CONFIG_S3_PROVIDER: ${{ secrets.RCLONE_CONFIG_S3_PROVIDER }}
          RCLONE_CONFIG_S3_SECRET_ACCESS_KEY: ${{ secrets.RCLONE_CONFIG_S3_SECRET_ACCESS_KEY }}
          RCLONE_CONFIG_S3_TYPE: ${{ secrets.RCLONE_CONFIG_S3_TYPE }}
